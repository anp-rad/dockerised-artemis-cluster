<?xml version='1.0'?>
<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->

<configuration xmlns="urn:activemq"
               xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
               xmlns:xi="http://www.w3.org/2001/XInclude"
               xsi:schemaLocation="urn:activemq /schema/artemis-configuration.xsd">

    <core xmlns="urn:activemq:core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="urn:activemq:core ">

        <name>messenger</name>


        <persistence-enabled>true</persistence-enabled>

        <!-- this could be ASYNCIO, MAPPED, NIO
             ASYNCIO: Linux Libaio
             MAPPED: mmap files
             NIO: Plain Java Files
         -->
        <journal-type>ASYNCIO</journal-type>

        <paging-directory>/var/artemis/{HOST}/paging</paging-directory>

        <journal-directory>/var/artemis/{HOST}/journal</journal-directory>

        <bindings-directory>/var/artemis/{HOST}/bindings</bindings-directory>

        <large-messages-directory>/var/artemis/{HOST}/large-messages</large-messages-directory>

        <journal-datasync>true</journal-datasync>

        <journal-min-files>2</journal-min-files>

        <journal-pool-files>10</journal-pool-files>

        <journal-device-block-size>4096</journal-device-block-size>

        <journal-file-size>10M</journal-file-size>

        <!--
         This value was determined through a calculation.
         Your system could perform 25 writes per millisecond
         on the current journal configuration.
         That translates as a sync write every 40000 nanoseconds.

         Note: If you specify 0 the system will perform writes directly to the disk.
               We recommend this to be 0 if you are using journalType=MAPPED and journal-datasync=false.
        -->
        <journal-buffer-timeout>40000</journal-buffer-timeout>


        <!--
          When using ASYNCIO, this will determine the writing queue depth for libaio.
         -->
        <journal-max-io>4096</journal-max-io>
        <!--
          You can verify the network health of a particular NIC by specifying the <network-check-NIC> element.
           <network-check-NIC>theNicName</network-check-NIC>
          -->

        <!--
          Use this to use an HTTP server to validate the network
           <network-check-URL-list>http://www.apache.org</network-check-URL-list> -->

        <!-- <network-check-period>10000</network-check-period> -->
        <!-- <network-check-timeout>1000</network-check-timeout> -->

        <!-- this is a comma separated list, no spaces, just DNS or IPs
             it should accept IPV6

             Warning: Make sure you understand your network topology as this is meant to validate if your network is valid.
                      Using IPs that could eventually disappear or be partially visible may defeat the purpose.
                      You can use a list of multiple IPs, and if any successful ping will make the server OK to continue running -->
        <!-- <network-check-list>10.0.0.1</network-check-list> -->

        <!-- use this to customize the ping used for ipv4 addresses -->
        <!-- <network-check-ping-command>ping -c 1 -t %d %s</network-check-ping-command> -->

        <!-- use this to customize the ping used for ipv6 addresses -->
        <!-- <network-check-ping6-command>ping6 -c 1 %2$s</network-check-ping6-command> -->

        <!-- how often we are looking for how many bytes are being used on the disk in ms -->
        <disk-scan-period>5000</disk-scan-period>

        <!-- once the disk hits this limit the system will block, or close the connection in certain protocols
             that won't support flow control. -->
        <max-disk-usage>90</max-disk-usage>

        <!-- should the broker detect dead locks and other issues -->
        <critical-analyzer>true</critical-analyzer>

        <critical-analyzer-timeout>120000</critical-analyzer-timeout>

        <critical-analyzer-check-period>60000</critical-analyzer-check-period>

        <critical-analyzer-policy>HALT</critical-analyzer-policy>

        <!-- the system will enter into page mode once you hit this limit.
             This is an estimate in bytes of how much the messages are using in memory

              The system will use half of the available memory (-Xmx) by default for the global-max-size.
              You may specify a different value here if you need to customize it to your needs.

              <global-max-size>100Mb</global-max-size>

        -->

        <!-- Connectors -->
        <connectors>
            <!-- __host__ is a place holder for the host name that will be replaced with the container id -->
            <connector name="netty-connector">tcp://{HOST}:61616</connector>
        </connectors>

        <!-- Acceptors -->
        <acceptors>
            <!-- __host__ is a place holder for the host name that will be replaced with the container id -->
            <acceptor name="netty-acceptor">tcp://0.0.0.0:61616?protocols=CORE,AMQP,STOMP,HORNETQ,MQTT,OPENWIRE</acceptor>
        </acceptors>

        <security-settings>
            <security-setting match="#">
                <permission type="createNonDurableQueue" roles="amq"/>
                <permission type="deleteNonDurableQueue" roles="amq"/>
                <permission type="createDurableQueue" roles="amq"/>
                <permission type="deleteDurableQueue" roles="amq"/>
                <permission type="createAddress" roles="amq"/>
                <permission type="deleteAddress" roles="amq"/>
                <permission type="consume" roles="amq"/>
                <permission type="browse" roles="amq"/>
                <permission type="send" roles="amq"/>
                <!-- we need this otherwise ./artemis data imp wouldn't work -->
                <permission type="manage" roles="amq"/>
            </security-setting>
        </security-settings>

        <!-- Clustering configuration -->
        <!-- default values are enough for testing -->
        <!-- for more fine grained control refer to the Clusters section in the Artemis
             documentation at: http://activemq.apache.org/components/artemis/documentation/ -->
        <broadcast-groups>
            <broadcast-group name="my-broadcast-group">
                <broadcast-period>5000</broadcast-period>
                <jgroups-file>jgroups-file_ping.xml</jgroups-file>
                <jgroups-channel>active_broadcast_channel</jgroups-channel>
                <connector-ref>netty-connector</connector-ref>
            </broadcast-group>
        </broadcast-groups>

        <!-- default values are enough for testing -->
        <!-- for more fine grained control refer to the Clusters section in the Artemis
             documentation at: http://activemq.apache.org/components/artemis/documentation/ -->
        <discovery-groups>
            <discovery-group name="my-discovery-group">
                <jgroups-file>jgroups-file_ping.xml</jgroups-file>
                <jgroups-channel>active_broadcast_channel</jgroups-channel>
                <refresh-timeout>10000</refresh-timeout>
            </discovery-group>
        </discovery-groups>

        <!-- default values are enough for testing -->
        <!-- for more fine grained control refer to the Clusters section in the Artemis
             documentation at: http://activemq.apache.org/components/artemis/documentation/ -->
        <cluster-connections>
            <cluster-connection name="my-cluster">
                <connector-ref>netty-connector</connector-ref>
                <retry-interval>500</retry-interval>
                <use-duplicate-detection>true</use-duplicate-detection>
                <message-load-balancing>ON_DEMAND</message-load-balancing>
                <discovery-group-ref discovery-group-name="my-discovery-group"/>
            </cluster-connection>
        </cluster-connections>

        <ha-policy>
            <live-only>
                <scale-down>
                    <discovery-group-ref discovery-group-name="my-discovery-group"/>
                </scale-down>
            </live-only>
        </ha-policy>

        <address-settings>
            <address-setting match="#">
                <!-- set a value > 0 in milliseconds to preserve messages on the node for a while
                     so that a consumer that quickly reconnects to this node retains access to them -->
                <redistribution-delay>0</redistribution-delay>
            </address-setting>
        </address-settings>

        <broker-plugins>
            <broker-plugin class-name="org.apache.activemq.artemis.core.server.plugin.impl.LoggingActiveMQServerPlugin">
                <property key="LOG_ALL_EVENTS" value="true"/>
                <property key="LOG_CONNECTION_EVENTS" value="true"/>
                <property key="LOG_SESSION_EVENTS" value="true"/>
                <property key="LOG_CONSUMER_EVENTS" value="true"/>
                <property key="LOG_DELIVERING_EVENTS" value="true"/>
                <property key="LOG_SENDING_EVENTS" value="true"/>
                <property key="LOG_INTERNAL_EVENTS" value="true"/>
            </broker-plugin>
        </broker-plugins>

    </core>
</configuration>
